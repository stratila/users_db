"""add users and role_permissions tables

Revision ID: 27133ce191df
Revises: 
Create Date: 2023-05-15 12:07:14.495182

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "27133ce191df"
down_revision = None
branch_labels = None
depends_on = None

name = "role_enum"
values = ("SUPER_ADMIN", "ADMIN", "USER")

role_enum_type = sa.Enum(*values, name=name)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table(
        "role_permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role", role_enum_type, nullable=False),
        sa.Column("permission", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("role", "permission", name="role_permission_uq"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("middle_name", sa.String(length=64), nullable=True),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("email", sa.String(length=64), nullable=False),
        sa.Column("password", sa.String(length=256), nullable=False),
        sa.Column("role", role_enum_type, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("role_permissions")
    role_enum_type.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
